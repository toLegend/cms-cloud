package org.mybatis.generator.plugins;import org.apache.commons.lang3.StringUtils;import org.mybatis.generator.api.IntrospectedColumn;import org.mybatis.generator.api.IntrospectedTable;import org.mybatis.generator.api.PluginAdapter;import org.mybatis.generator.api.dom.java.Field;import org.mybatis.generator.api.dom.java.Interface;import org.mybatis.generator.api.dom.java.Method;import org.mybatis.generator.api.dom.java.TopLevelClass;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;/** * @author mominfu  2018/11/10 */public class LombokPlugin extends PluginAdapter {    @Override    public boolean validate(List<String> list) {        return true;    }    /**     * 实体类设置     * @param topLevelClass     * @param introspectedTable     * @return     */    @Override    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {        //添加类的import        topLevelClass.addImportedType("lombok.Data");        topLevelClass.addImportedType("lombok.Builder");        topLevelClass.addImportedType("lombok.NoArgsConstructor");        topLevelClass.addImportedType("lombok.AllArgsConstructor");        //添加类的注解        topLevelClass.addAnnotation("@Data");        topLevelClass.addAnnotation("@Builder");        topLevelClass.addAnnotation("@NoArgsConstructor");        topLevelClass.addAnnotation("@AllArgsConstructor");        //添加类的注释        topLevelClass.addJavaDocLine("/**");        topLevelClass.addJavaDocLine("* Created by Momf Generator on " + date2Str(new Date()));        topLevelClass.addJavaDocLine("*/");        return true;    }    /**     * Mapper类注释     * @param interfaze     * @param topLevelClass     * @param introspectedTable     * @return     */    @Override    public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {        //Mapper文件的注释        interfaze.addJavaDocLine("/**");        interfaze.addJavaDocLine("* Created by Momf Generator on " + date2Str(new Date()));        interfaze.addJavaDocLine("*/");        return true;    }    /**     * 实体get方法     * @param method     * @param topLevelClass     * @param introspectedColumn     * @param introspectedTable     * @param modelClassType     * @return     */    @Override    public boolean modelSetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {        //不生成getter        return false;    }    /**     * 实体set方法     * @param method     * @param topLevelClass     * @param introspectedColumn     * @param introspectedTable     * @param modelClassType     * @return     */    @Override    public boolean modelGetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {        //不生成setter        return false;    }    /**     * 实体设置     * @param field     * @param topLevelClass     * @param introspectedColumn     * @param introspectedTable     * @param modelClassType     * @return     */    @Override    public boolean modelFieldGenerated(Field field, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) {        String remark = introspectedColumn.getRemarks();        if(StringUtils.isNotBlank(remark)){            field.addJavaDocLine("/** ");            field.addJavaDocLine("* " + remark);            field.addJavaDocLine("*/");        }        return true;    }    private String date2Str(Date date) {        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");        return sdf.format(date);    }}